name: IBO PROD - Build and Deploy

on:
  workflow_dispatch:
    inputs: {}

env:
  GCR_GKE_PROJECT: ibo-platform-components
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: asia-south1
  IMAGE: core-point-of-sale
  REPOSITORY: us.gcr.io
  REGISTRY_HOSTNAME: us-docker.pkg.dev
  APP_NAME: core-point-of-sale
  CLUSTER_NAME: ${{ secrets.IBO_GKE_CLUSTER_PRD }}
  PROJECT_ID: ${{ secrets.IBO_GCP_PROJECT_ID_PRD }}
  GOOGLE_PRIVATE_KEY: ${{ secrets.IBO_GOOGLE_PRIVATE_KEY_PRD }}
  NAMESPACE: ebo
  VALUES_FILE: deployment/charts/config/ibo/ibo-values-prod.yaml

jobs:
  node-build-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{env.GOOGLE_PRIVATE_KEY}}

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          project_id: ${{env.PROJECT_ID}}
          location: 'asia-south1'

      - name: build-login-publish-docker image
        uses: ebomart/build-publish-docker-artifact@main
        with:
          registry_host: $REGISTRY_HOSTNAME
          gke_project: $GCR_GKE_PROJECT
          repository: $REPOSITORY
          image_name: $IMAGE
          google_private_key: ${{env.GOOGLE_PRIVATE_KEY}}
          sha: ${{ github.sha }}
          docker_build_args: '--build-arg NPM_TOKEN=$NPM_TOKEN'
          npm_token: ${{ secrets.NPM_TOKEN }}

      # Install helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        env:
          HELM_OPTS: --set-string environmentVariables.GCP_PROJECT_ID=${{ secrets.IBO_GCP_PROJECT_ID_PRD }}
        run: |
          helm upgrade --install --wait $APP_NAME deployment/charts/$APP_NAME --namespace $NAMESPACE $HELM_OPTS --set image.tag=$GITHUB_SHA -f $VALUES_FILE
